{
  "id": 77882,
  "type": 1,
  "status": 2,
  "agent_id": 3763909,
  "created_at": "2013-04-22T09:16:01Z",
  "category_id": 81138,
  "folder_id": 134069,
  "title": "Automatic Database Backup",
  "updated_at": "2020-07-28T21:36:10Z",
  "description": "<h3><span style=\"font-size: 18px;\">Overview</span></h3><p><br></p><p><span style=\"font-size: 13px; font-family: Roboto, sans-serif; color: rgb(0, 0, 0); font-weight: 400;\">The Softswitch includes a system that makes possible a periodic, automatic backup of the database.</span> Parameters of the database back up, such as schedule, start time, compression, and number of generations to keep, can be configured via the Backup section of the System Parameters interface. Care should be taken when selecting a start time for the backup because  even though the backup procedure is on-line, (which means that it doesn\u2019t take service offline for its duration) it creates a significant load on the system which can interfere with call processing. An off-peak time for database backup should be selected.<br><br>It should be noted that in \"weekly\" mode the backup will run on the same day of the week as it ran  the first time after being enabled. So, if you have enabled it on Friday afternoon to run weekly at 04:30am then it will run every Saturday at 04:30am. The same rule applies for \"monthly\" mode \u2013 the backup will run on the same day every month as it  ran for the first time after being enabled.<br><br>By default backup copies of the database are stored in the /var/backups directory of the Softswitch itself. It is advised to configure the server to mount a separate physical hard drive (or a network drive) into that directory, so that if the main drive fails, the system can be restored from the backup.<br><br>A format for the Database backup can be selected from several different formats, each with different characteristics:</p><ul><li><em><strong>SQL Text Dump (default)</strong></em> \u2013 this format provides best combination of recovery speed and compatibility across database server software versions. Can be restored on any version of database server software. Moderately space efficient.</li><li><em><strong>Filesystem DB Snapshot</strong></em> \u2013 this format provides the fastest recovery speed, but it is not compatible across major and minor database server software versions. The format is space inefficient.</li><li><em><strong>SQL Binary Dump</strong></em> \u2013 this format provides good recovery speed but it is compatible only across minor database server software versions. Very space efficient.</li><li><em><strong>SQL TAR Dump</strong></em> \u2013 this format provides good recovery speed but it is compatible only across minor database server software versions. Using this archive format allows reordering and/or exclusion of database objects at the time the database is restored. Unlike with other formats it is also possible to limit which data is reloaded at restore time. Moderately space efficient.</li></ul><p><br>For even better protection, there is an optional mechanism that allows uploading of backup files to an external remote server over the network automatically as part of the backup procedure. In order to use this mechanism, one or two scripts have to be placed in the /var/db/pgsql directory: ecopy and eremove, each of them taking \"backup filename\" as a single argument. The first one is invoked when the backup file has been created and needs to be uploaded to the remote server, while the second one \u2013 when the backup file has to be removed as part of the rotation procedure. The ecopy script should return its error status \u2013 exit code 0 means that the upload has completed successfully, while any other code indicates error. \u00a0A sample ecopy script that uploads the file to the remote TFTP server is available in the /home/ssp/scripts/ecopy_tftp.sh file. The eremove script can be absent, in which case some external mechanism for remote backup aging and rotation has to be implemented instead. All backup activity is logged in the /var/log/backup.log file.</p><p><br></p><p>All backup activity is logged in the <em>/var/log/backup.log</em> file</p><p><br></p><p><strong>How to restore system from backup when your production server is totally crashed and there is no Standby server:</strong></p><ol><li>Activate the database backup on the web interface of your Sippy Softswitch (when you first use Sippy softswitch);</li></ol><p><img class=\"fr-dib\" src=\"https://s3.amazonaws.com/cdn.freshdesk.com/data/helpdesk/attachments/production/3031285044/original/BRa5nn3OQc5v2Oqlq9JjjUvodEa4Q_SE6Q.jpg?1505389751\" style=\"width: 686px; height: 176.331px;\" data-filelink=\"https://s3.amazonaws.com/cdn.freshdesk.com/data/helpdesk/attachments/production/3031285044/original/BRa5nn3OQc5v2Oqlq9JjjUvodEa4Q_SE6Q.jpg?1505389751\" data-fileid=\"3031285044\" data-uniquekey=\"1505389726208\"></p><ol><li>Set a \" Schedule\"(how frequent the system should backup the database), \"Dump Format = SQL dump(text)\", \"Compression = gzip\"(or w/o compression), \"Start Time\" (suitable time of DB backup), \"Generations\" (the amount of backups you plan to store)</li><li>Prepare the ftp server and provide the Sippy support team all information needed (ftp's IP, credentials and folder). \u00a0The Sippy support team will configure database backup to your ftp server. Configuration of \"Database Upload\" to the FTP server should be done only once, after that the system will always upload new backups to your ftp server automatically</li><li>If the server crashes and can't be recovered, you can install the system from scratch by using a Sippy ISO image <br>How to install system from ISO:<br><a href=\"https://support.sippysoft.com/solution/folders/133030\" rel=\"noreferrer\" target=\"_blank\" title=\"\">https://support.sippysoft.com/solution/folders/133030</a></li><li>When the installation is done, contact support for further activation of the server and provide a link to the backup file (file that was uploaded to FTP beforehand). \u00a0Support needs the backup file for data recovery.<br>NOTE: \u00a0due to the complexity of the procedure, only Sippy's support team can restore the backup. Sippy Software's support team knows Sippy's architecture and the appropriate services involved.</li></ol>",
  "description_text": " Overview     The Softswitch includes a system that makes possible a periodic, automatic backup of the database. Parameters of the database back up, such as schedule, start time, compression, and number of generations to keep, can be configured via the Backup section of the System Parameters interface. Care should be taken when selecting a start time for the backup because  even though the backup procedure is on-line, (which means that it doesn\u2019t take service offline for its duration) it creates a significant load on the system which can interfere with call processing. An off-peak time for database backup should be selected.  It should be noted that in \"weekly\" mode the backup will run on the same day of the week as it ran  the first time after being enabled. So, if you have enabled it on Friday afternoon to run weekly at 04:30am then it will run every Saturday at 04:30am. The same rule applies for \"monthly\" mode \u2013 the backup will run on the same day every month as it  ran for the first time after being enabled.  By default backup copies of the database are stored in the /var/backups directory of the Softswitch itself. It is advised to configure the server to mount a separate physical hard drive (or a network drive) into that directory, so that if the main drive fails, the system can be restored from the backup.  A format for the Database backup can be selected from several different formats, each with different characteristics:   SQL Text Dump (default) \u2013 this format provides best combination of recovery speed and compatibility across database server software versions. Can be restored on any version of database server software. Moderately space efficient.  Filesystem DB Snapshot \u2013 this format provides the fastest recovery speed, but it is not compatible across major and minor database server software versions. The format is space inefficient.  SQL Binary Dump \u2013 this format provides good recovery speed but it is compatible only across minor database server software versions. Very space efficient.  SQL TAR Dump \u2013 this format provides good recovery speed but it is compatible only across minor database server software versions. Using this archive format allows reordering and/or exclusion of database objects at the time the database is restored. Unlike with other formats it is also possible to limit which data is reloaded at restore time. Moderately space efficient.    For even better protection, there is an optional mechanism that allows uploading of backup files to an external remote server over the network automatically as part of the backup procedure. In order to use this mechanism, one or two scripts have to be placed in the /var/db/pgsql directory: ecopy and eremove, each of them taking \"backup filename\" as a single argument. The first one is invoked when the backup file has been created and needs to be uploaded to the remote server, while the second one \u2013 when the backup file has to be removed as part of the rotation procedure. The ecopy script should return its error status \u2013 exit code 0 means that the upload has completed successfully, while any other code indicates error. \u00a0A sample ecopy script that uploads the file to the remote TFTP server is available in the /home/ssp/scripts/ecopy_tftp.sh file. The eremove script can be absent, in which case some external mechanism for remote backup aging and rotation has to be implemented instead. All backup activity is logged in the /var/log/backup.log file.     All backup activity is logged in the /var/log/backup.log file     How to restore system from backup when your production server is totally crashed and there is no Standby server:   Activate the database backup on the web interface of your Sippy Softswitch (when you first use Sippy softswitch);      Set a \" Schedule\"(how frequent the system should backup the database), \"Dump Format = SQL dump(text)\", \"Compression = gzip\"(or w/o compression), \"Start Time\" (suitable time of DB backup), \"Generations\" (the amount of backups you plan to store)  Prepare the ftp server and provide the Sippy support team all information needed (ftp's IP, credentials and folder). \u00a0The Sippy support team will configure database backup to your ftp server. Configuration of \"Database Upload\" to the FTP server should be done only once, after that the system will always upload new backups to your ftp server automatically  If the server crashes and can't be recovered, you can install the system from scratch by using a Sippy ISO image  How to install system from ISO: https://support.sippysoft.com/solution/folders/133030  When the installation is done, contact support for further activation of the server and provide a link to the backup file (file that was uploaded to FTP beforehand). \u00a0Support needs the backup file for data recovery. NOTE: \u00a0due to the complexity of the procedure, only Sippy's support team can restore the backup. Sippy Software's support team knows Sippy's architecture and the appropriate services involved.  ",
  "seo_data": {
    "meta_title": "",
    "meta_description": "",
    "meta_keywords": ""
  },
  "tags": [],
  "attachments": [],
  "cloud_files": [],
  "thumbs_up": 1,
  "thumbs_down": 0,
  "hits": 1120,
  "suggested": 0,
  "feedback_count": 0,
  "collaboration": {
    "convo_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJUeXBlIjoiYXJ0aWNsZSIsIkNvbnZvSWQiOiI3Nzg4Mi1lbiIsIlVzZXJJZCI6IjMwMTIwODk1MjQiLCJleHAiOjE2MzUzNzEwMzF9.j7UQdVfDnasLeNzKThkwM0v2edlq2np66ZBmk85uPkQ"
  }
}