{
  "id": 107440,
  "type": 1,
  "status": 2,
  "agent_id": 3763909,
  "created_at": "2013-07-09T17:50:36Z",
  "category_id": 107132,
  "folder_id": 176838,
  "title": "XML-RPC API - Refunding an Account",
  "updated_at": "2021-06-10T11:10:22Z",
  "description": "<div dir=\"ltr\"><div dir=\"ltr\"><div><div style=\"padding-left: 18px;\">\n<h2 id=\"accountAddFundsaccountCreditandaccountDebit\" style='font-family: Arial,Verdana,\"Bitstream Vera Sans\",Helvetica,sans-serif; font-weight: bold; letter-spacing: -0.018em; font-size: 16px; margin-left: -18px;'>accountAddFunds(), accountCredit() and accountDebit()</h2>\n<p>These applications allow to refund or charge the Account's balance with the specified sum.</p>\n<p><br></p>\n<h3 id=\"Input\" style='font-family: Arial,Verdana,\"Bitstream Vera Sans\",Helvetica,sans-serif; font-weight: bold; letter-spacing: -0.018em; page-break-after: avoid; font-size: 14px; margin-left: -18px;'>Input</h3>\n<p>These functions receive struct with the following fields:</p>\n<p><br></p>\n<h4 id=\"Mandatoryfields\" style='font-family: Arial,Verdana,\"Bitstream Vera Sans\",Helvetica,sans-serif; font-weight: bold; letter-spacing: -0.018em; page-break-after: avoid;'>Mandatory fields</h4>\n<ul>\n<li>\n<strong>i_account</strong> (integer) - ID of account. Integer.</li>\n<li>\n<strong>amount</strong> - amount to refund or charge. Double.</li>\n<li>\n<strong>currency</strong> - currency in iso_4217 format (3 letters). String.</li>\n</ul>\n<h4 id=\"Optionalfields\" style='font-family: Arial,Verdana,\"Bitstream Vera Sans\",Helvetica,sans-serif; font-weight: bold; letter-spacing: -0.018em; page-break-after: avoid;'>Optional fields</h4>\n<ul>\n<li>\n<strong>payment_notes</strong> - String</li>\n<li>\n<strong>payment_time</strong> - time of the payment in '%H:%M:%S.000 GMT %a %b %d %Y' format (e.g. <strong>09:57:29.000 GMT Wed Nov 18 2009</strong>). (from version &gt;= 5.0). String.</li>\n</ul>\n<p style=\"\"><br></p>\n<h3 id=\"Output\" style='font-family: Arial,Verdana,\"Bitstream Vera Sans\",Helvetica,sans-serif; font-weight: bold; letter-spacing: -0.018em; page-break-after: avoid; font-size: 14px; margin-left: -18px;'>Output</h3>\n<p style=\"\">The function returns:</p>\n<ul>\n<li>\n<strong>result</strong> - 'OK'</li>\n<li>XMLRPC fault in case of any error.</li>\n</ul>\n<h3 id=\"Example\" style='font-family: Arial,Verdana,\"Bitstream Vera Sans\",Helvetica,sans-serif; font-weight: bold; letter-spacing: -0.018em; page-break-after: avoid; font-size: 14px; margin-left: -18px;'>Example</h3>\n<p>Python example:</p>\n<div style=\"background-color: rgb(247, 247, 247); border: 1px solid rgb(215, 215, 215); margin: 1em 1.75em; padding: 0.25em; overflow: auto;\">\n<pre style=\"background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(153, 153, 136); font-style: italic;\"># this script requires httplib2 to be installed from http://code.google.com/p/httplib2/</span>\n<strong>import</strong> <span style=\"color: rgb(85, 85, 85);\">httplib2</span>\n<strong>import</strong> <span style=\"color: rgb(85, 85, 85);\">urllib</span>\n<strong>from</strong> <span style=\"color: rgb(85, 85, 85);\">xmlrpclib</span> <strong>import</strong> ServerProxy<span>,</span> getparser<span>,</span> ProtocolError\n\n<strong>class</strong> <span style=\"color: rgb(68, 85, 136); font-weight: bold;\">HTTPSDigestAuthTransport</span><span>:</span>\n\u00a0 \u00a0 <strong>def</strong> <span style=\"color: rgb(153, 0, 0); font-weight: bold;\">request</span><span>(</span><span style=\"color: rgb(153, 153, 153);\">self</span><span>,</span> host<span>,</span> handler<span>,</span> request_body<span>,</span> verbose<strong>=</strong><span style=\"color: rgb(0, 153, 153);\">0</span><span>):</span>\n\u00a0 \u00a0 \u00a0 \u00a0 auth<span>,</span> host <strong>=</strong> urllib<strong>.</strong>splituser<span>(</span>host<span>)</span>\n\u00a0 \u00a0 \u00a0 \u00a0 username<span>,</span> password <strong>=</strong> urllib<strong>.</strong>splitpasswd<span>(</span>auth<span>)</span>\n\n\u00a0 \u00a0 \u00a0 \u00a0 h <strong>=</strong> httplib2<strong>.</strong>Http<span>()</span>\n\u00a0 \u00a0 \u00a0 \u00a0 <strong>if</strong> verbose<span>:</span>\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 h<strong>.</strong>debuglevel <strong>=</strong> <span style=\"color: rgb(0, 153, 153);\">1</span>\n\u00a0 \u00a0 \u00a0 \u00a0 h<strong>.</strong>add_credentials<span>(</span>username<span>,</span> password<span>)</span>\n\n\u00a0 \u00a0 \u00a0 \u00a0 resp<span>,</span> content <strong>=</strong> h<strong>.</strong>request<span>(</span><span style=\"color: rgb(187, 136, 68);\">\"https://\"</span> <strong>+</strong> host <strong>+</strong> handler<span>,</span> <span style=\"color: rgb(187, 136, 68);\">\"POST\"</span><span>,</span> body<strong>=</strong>request_body<span>,</span>\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 headers<strong>=</strong><span>{</span><span style=\"color: rgb(187, 136, 68);\">'content-type'</span><span>:</span><span style=\"color: rgb(187, 136, 68);\">'text/xml'</span><span>})</span>\n\n\u00a0 \u00a0 \u00a0 \u00a0 <strong>if</strong> resp<strong>.</strong>status <strong>!=</strong> <span style=\"color: rgb(0, 153, 153);\">200</span><span>:</span>\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <strong>raise</strong> ProtocolError<span>(</span><span style=\"color: rgb(187, 136, 68);\">\"https://\"</span> <strong>+</strong> host <strong>+</strong> handler<span>,</span>\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 resp<strong>.</strong>status<span>,</span> resp<strong>.</strong>reason<span>,</span> <span style=\"color: rgb(153, 153, 153);\">None</span><span>)</span>\n\n\u00a0 \u00a0 \u00a0 \u00a0 p<span>,</span> u <strong>=</strong> getparser<span>(</span><span style=\"color: rgb(0, 153, 153);\">0</span><span>)</span>\n\u00a0 \u00a0 \u00a0 \u00a0 p<strong>.</strong>feed<span>(</span>content<span>)</span>\n\n\u00a0 \u00a0 \u00a0 \u00a0 <strong>return</strong> u<strong>.</strong>close<span>()</span>\n\ntransport <strong>=</strong> HTTPSDigestAuthTransport<span>()</span>\nclient <strong>=</strong> ServerProxy<span>(</span><span style=\"color: rgb(187, 136, 68);\">\"https://username:password@1.2.3.4/xmlapi/xmlapi\"</span><span>,</span> transport<span>)</span>\nres <strong>=</strong> client<strong>.</strong>accountAddFunds<span>({</span> <span style=\"color: rgb(187, 136, 68);\">'i_account'</span> <span>:</span> <span style=\"color: rgb(0, 153, 153);\">1234</span><span>,</span> <span style=\"color: rgb(187, 136, 68);\">'amount'</span> <span>:</span> <span style=\"color: rgb(0, 153, 153);\">1.23</span><span>,</span> <span style=\"color: rgb(187, 136, 68);\">'currency'</span> <span>:</span> <span style=\"color: rgb(187, 136, 68);\">'USD'</span><span>,</span> <span style=\"color: rgb(187, 136, 68);\">'payment_notes'</span> <span>:</span> <span style=\"color: rgb(187, 136, 68);\">'Test credit'</span> <span>})</span>\n<strong>print</strong> res<span>[</span><span style=\"color: rgb(187, 136, 68);\">'result'</span><span>]</span></pre>\n<div><span><br></span></div>\n<p style=\"\"><br></p>\n</div>\n</div></div></div></div>",
  "description_text": "    \n accountAddFunds(), accountCredit() and accountDebit() \n These applications allow to refund or charge the Account's balance with the specified sum. \n   \n Input \n These functions receive struct with the following fields: \n   \n Mandatory fields \n \n \ni_account (integer) - ID of account. Integer. \n \namount - amount to refund or charge. Double. \n \ncurrency - currency in iso_4217 format (3 letters). String. \n \n Optional fields \n \n \npayment_notes - String \n \npayment_time - time of the payment in '%H:%M:%S.000 GMT %a %b %d %Y' format (e.g. 09:57:29.000 GMT Wed Nov 18 2009). (from version >= 5.0). String. \n \n   \n Output \n The function returns: \n \n \nresult - 'OK' \n XMLRPC fault in case of any error. \n \n Example \n Python example: \n \n # this script requires httplib2 to be installed from http://code.google.com/p/httplib2/\nimport httplib2\nimport urllib\nfrom xmlrpclib import ServerProxy, getparser, ProtocolError\n\nclass HTTPSDigestAuthTransport:\n\u00a0 \u00a0 def request(self, host, handler, request_body, verbose=0):\n\u00a0 \u00a0 \u00a0 \u00a0 auth, host = urllib.splituser(host)\n\u00a0 \u00a0 \u00a0 \u00a0 username, password = urllib.splitpasswd(auth)\n\n\u00a0 \u00a0 \u00a0 \u00a0 h = httplib2.Http()\n\u00a0 \u00a0 \u00a0 \u00a0 if verbose:\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 h.debuglevel = 1\n\u00a0 \u00a0 \u00a0 \u00a0 h.add_credentials(username, password)\n\n\u00a0 \u00a0 \u00a0 \u00a0 resp, content = h.request(\"https://\" + host + handler, \"POST\", body=request_body,\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 headers={'content-type':'text/xml'})\n\n\u00a0 \u00a0 \u00a0 \u00a0 if resp.status != 200:\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 raise ProtocolError(\"https://\" + host + handler,\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 resp.status, resp.reason, None)\n\n\u00a0 \u00a0 \u00a0 \u00a0 p, u = getparser(0)\n\u00a0 \u00a0 \u00a0 \u00a0 p.feed(content)\n\n\u00a0 \u00a0 \u00a0 \u00a0 return u.close()\n\ntransport = HTTPSDigestAuthTransport()\nclient = ServerProxy(\"https://username:password@1.2.3.4/xmlapi/xmlapi\", transport)\nres = client.accountAddFunds({ 'i_account' : 1234, 'amount' : 1.23, 'currency' : 'USD', 'payment_notes' : 'Test credit' })\nprint res['result'] \n   \n   \n \n    ",
  "seo_data": {
    "meta_title": "",
    "meta_description": "",
    "meta_keywords": ""
  },
  "tags": [],
  "attachments": [],
  "cloud_files": [],
  "thumbs_up": 0,
  "thumbs_down": 5,
  "hits": 1522,
  "suggested": 0,
  "feedback_count": 0,
  "collaboration": {
    "convo_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJUeXBlIjoiYXJ0aWNsZSIsIkNvbnZvSWQiOiIxMDc0NDAtZW4iLCJVc2VySWQiOiIzMDEyMDg5NTI0IiwiZXhwIjoxNjM1MzcxMTAxfQ.MnsuGN_AGSJgUbnpcxIxdUjAmSXMZEFo-31ur5FXIls"
  }
}