{
  "id": 107511,
  "type": 1,
  "status": 2,
  "agent_id": 3012089524,
  "created_at": "2013-07-09T18:53:51Z",
  "category_id": 107132,
  "folder_id": 176917,
  "title": "XML-RPC API - Python Example",
  "updated_at": "2021-08-11T09:22:50Z",
  "description": "<div data-identifyelement=\"493\" id=\"altlinks\" style=\"clear: both; text-align: center; color: rgb(0, 0, 0); font-family: Verdana, Arial, 'Bitstream Vera Sans', Helvetica, sans-serif; font-style: normal; line-height: normal;\"><br data-identifyelement=\"494\"></div><div class=\"wiki\" data-identifyelement=\"495\" id=\"content\" style=\"padding-bottom: 2em; position: relative; color: rgb(0, 0, 0); font-family: Verdana, Arial, 'Bitstream Vera Sans', Helvetica, sans-serif; font-style: normal; line-height: normal;\"><div class=\"wikipage searchable\" data-identifyelement=\"496\" style=\"padding-left: 18px;\"><h3 data-identifyelement=\"497\" dir=\"ltr\" id=\"Pythonexample\" style=\"font-family: Arial, Verdana, 'Bitstream Vera Sans', Helvetica, sans-serif; font-weight: bold; letter-spacing: -0.018em; page-break-after: avoid; font-size: 19px; margin: 0.15em 1em 0.5em -18px;\"><span dir=\"ltr\" style=\"font-size: 12px;\">See introduction to XMLAPI for details on Authentication:</span></h3><p><a href=\"https://support.sippysoft.com/a/solutions/articles/106909\">https://support.sippysoft.com/a/solutions/articles/106909</a></p><h1 data-identifyelement=\"497\" dir=\"ltr\" id=\"Pythonexample\" style=\"font-family: Arial, Verdana, 'Bitstream Vera Sans', Helvetica, sans-serif; font-weight: bold; letter-spacing: -0.018em; page-break-after: avoid; font-size: 19px; margin: 0.15em 1em 0.5em -18px;\">Python example - Digest Authentication</h1><div data-identifyelement=\"500\"><pre contenteditable=\"false\" data-code-brush=\"Python\" data-identifyelement=\"501\" dir=\"ltr\" rel=\"highlighter\"># this script requires httplib2 to be installed\n# username should be Web Login of the Customer, password - API password\n# 1.2.3.4 should be replaced with target IP/hostname of Sippy Softswitch\nimport httplib2\nimport urllib.request, urllib.parse, urllib.error\nfrom xmlrpc.client import ServerProxy, getparser, ProtocolError\n\nclass HTTPSDigestAuthTransport:\n&nbsp; &nbsp; def request(self, host, handler, request_body, verbose=0):\n&nbsp; &nbsp; &nbsp; &nbsp; auth, host = urllib.parse.splituser(host)\n&nbsp; &nbsp; &nbsp; &nbsp; username, password = urllib.parse.splitpasswd(auth)\n\n&nbsp; &nbsp; &nbsp; &nbsp; h = httplib2.Http()\n&nbsp; &nbsp; &nbsp; &nbsp; if verbose:\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; h.debuglevel = 1\n&nbsp; &nbsp; &nbsp; &nbsp; h.add_credentials(username, password)\n\n&nbsp; &nbsp; &nbsp; &nbsp; resp, content = h.request(\"https://\" + host + handler, \"POST\", body=request_body,\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; headers={'content-type':'text/xml'})\n\n&nbsp; &nbsp; &nbsp; &nbsp; if resp.status != 200:\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; raise ProtocolError(\"https://\" + host + handler,\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; resp.status, resp.reason, None)\n\n&nbsp; &nbsp; &nbsp; &nbsp; p, u = getparser(0)\n&nbsp; &nbsp; &nbsp; &nbsp; p.feed(content)\n\n&nbsp; &nbsp; &nbsp; &nbsp; return u.close()\n\ntransport = HTTPSDigestAuthTransport()\nclient = ServerProxy(\"https://username:password@1.2.3.4/xmlapi/xmlapi\", transport)\n\n# add a mapping\nres = client.addCLIMapping({ 'i_account' : 1234, 'cli' : '123456', 'lang' : 'en' })\nprint(res['result'])\n\n# retrieve list of trusted numbers\nres = client.listCLIMappings({ 'i_account' : 1234 })\nif res['result'] == 'OK':\n&nbsp; &nbsp; for cli, lang in res['list']:\n&nbsp; &nbsp; &nbsp; &nbsp; print(cli, lang)</pre><h1 data-identifyelement=\"540\" dir=\"ltr\" style=\"font-family: Arial, Verdana, &quot;Bitstream Vera Sans&quot;, Helvetica, sans-serif; font-weight: bold; break-after: avoid; font-size: 19px;\">Python example - Trusted Authentication</h1><p data-identifyelement=\"541\" dir=\"ltr\">In this example i_customer should be supplied to selected XMLAPI method, which is mandatory for most methods in trusted mode.&nbsp;</p><p data-identifyelement=\"541\" dir=\"ltr\"><br></p><pre contenteditable=\"false\" data-code-brush=\"Python\" data-identifyelement=\"501\" dir=\"ltr\" rel=\"highlighter\"># this script requires httplib2 to be installed\n# 1.2.3.4 should be replaced with target IP/hostname of Sippy \nimport httplib2\nimport urllib.request, urllib.parse, urllib.error\nfrom xmlrpc.client import ServerProxy, getparser, ProtocolError\n\nclass HTTPSTrustedAuthTransport:\n    def request(self, host, handler, request_body, verbose=0):\n        h = httplib2.Http(disable_ssl_certificate_validation=False)\n        if verbose:\n            h.debuglevel = 1\n        resp, content = h.request(\n            \"https://\" + host + handler,\n            \"POST\",\n            body=request_body,\n            headers={'content-type': 'text/xml'})\n\n        if resp.status != 200:\n            raise ProtocolError(\"https://\" + host + handler, resp.status,\n                                resp.reason, None)\n        p, u = getparser(0)\n        p.feed(content)\n        return u.close()\n\ntransport = HTTPSTrustedAuthTransport()\nclient = ServerProxy(\"https://1.2.3.4/xmlapi/xmlapi\", transport)\n\n# add a mapping\nres = client.addCLIMapping({ 'i_customer': 1, 'i_account' : 34, 'cli' : '123456', 'lang' : 'en' })\nprint(res['result'])\n\n# retrieve list of trusted numbers\nres = client.listCLIMappings({ 'i_customer': 1, 'i_account' : 34 })\nif res['result'] == 'OK':\n    for cli, lang in res['list']:\n        print(cli, lang)</pre><p data-identifyelement=\"541\" dir=\"ltr\"><br></p></div></div></div>",
  "description_text": "      See introduction to XMLAPI for details on Authentication:  https://support.sippysoft.com/a/solutions/articles/106909  Python example - Digest Authentication   # this script requires httplib2 to be installed\n# username should be Web Login of the Customer, password - API password\n# 1.2.3.4 should be replaced with target IP/hostname of Sippy Softswitch\nimport httplib2\nimport urllib.request, urllib.parse, urllib.error\nfrom xmlrpc.client import ServerProxy, getparser, ProtocolError\n\nclass HTTPSDigestAuthTransport:\n\u00a0 \u00a0 def request(self, host, handler, request_body, verbose=0):\n\u00a0 \u00a0 \u00a0 \u00a0 auth, host = urllib.parse.splituser(host)\n\u00a0 \u00a0 \u00a0 \u00a0 username, password = urllib.parse.splitpasswd(auth)\n\n\u00a0 \u00a0 \u00a0 \u00a0 h = httplib2.Http()\n\u00a0 \u00a0 \u00a0 \u00a0 if verbose:\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 h.debuglevel = 1\n\u00a0 \u00a0 \u00a0 \u00a0 h.add_credentials(username, password)\n\n\u00a0 \u00a0 \u00a0 \u00a0 resp, content = h.request(\"https://\" + host + handler, \"POST\", body=request_body,\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 headers={'content-type':'text/xml'})\n\n\u00a0 \u00a0 \u00a0 \u00a0 if resp.status != 200:\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 raise ProtocolError(\"https://\" + host + handler,\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 resp.status, resp.reason, None)\n\n\u00a0 \u00a0 \u00a0 \u00a0 p, u = getparser(0)\n\u00a0 \u00a0 \u00a0 \u00a0 p.feed(content)\n\n\u00a0 \u00a0 \u00a0 \u00a0 return u.close()\n\ntransport = HTTPSDigestAuthTransport()\nclient = ServerProxy(\"https://username:password@1.2.3.4/xmlapi/xmlapi\", transport)\n\n# add a mapping\nres = client.addCLIMapping({ 'i_account' : 1234, 'cli' : '123456', 'lang' : 'en' })\nprint(res['result'])\n\n# retrieve list of trusted numbers\nres = client.listCLIMappings({ 'i_account' : 1234 })\nif res['result'] == 'OK':\n\u00a0 \u00a0 for cli, lang in res['list']:\n\u00a0 \u00a0 \u00a0 \u00a0 print(cli, lang)  Python example - Trusted Authentication  In this example i_customer should be supplied to selected XMLAPI method, which is mandatory for most methods in trusted mode.\u00a0     # this script requires httplib2 to be installed\n# 1.2.3.4 should be replaced with target IP/hostname of Sippy \nimport httplib2\nimport urllib.request, urllib.parse, urllib.error\nfrom xmlrpc.client import ServerProxy, getparser, ProtocolError\n\nclass HTTPSTrustedAuthTransport:\n    def request(self, host, handler, request_body, verbose=0):\n        h = httplib2.Http(disable_ssl_certificate_validation=False)\n        if verbose:\n            h.debuglevel = 1\n        resp, content = h.request(\n            \"https://\" + host + handler,\n            \"POST\",\n            body=request_body,\n            headers={'content-type': 'text/xml'})\n\n        if resp.status != 200:\n            raise ProtocolError(\"https://\" + host + handler, resp.status,\n                                resp.reason, None)\n        p, u = getparser(0)\n        p.feed(content)\n        return u.close()\n\ntransport = HTTPSTrustedAuthTransport()\nclient = ServerProxy(\"https://1.2.3.4/xmlapi/xmlapi\", transport)\n\n# add a mapping\nres = client.addCLIMapping({ 'i_customer': 1, 'i_account' : 34, 'cli' : '123456', 'lang' : 'en' })\nprint(res['result'])\n\n# retrieve list of trusted numbers\nres = client.listCLIMappings({ 'i_customer': 1, 'i_account' : 34 })\nif res['result'] == 'OK':\n    for cli, lang in res['list']:\n        print(cli, lang)       ",
  "seo_data": {
    "meta_title": "",
    "meta_description": "",
    "meta_keywords": ""
  },
  "tags": [],
  "attachments": [],
  "cloud_files": [],
  "thumbs_up": 0,
  "thumbs_down": 9,
  "hits": 2962,
  "suggested": 0,
  "feedback_count": 0,
  "collaboration": {
    "convo_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJUeXBlIjoiYXJ0aWNsZSIsIkNvbnZvSWQiOiIxMDc1MTEtZW4iLCJVc2VySWQiOiIzMDEyMDg5NTI0IiwiZXhwIjoxNjM1MzcxMTEzfQ.RCn4fKc-ti3HgIild9CoCTqVawsAcZTgbkTVbnJTeIM"
  }
}