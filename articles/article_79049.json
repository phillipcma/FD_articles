{
  "id": 79049,
  "type": 1,
  "status": 2,
  "agent_id": 3763909,
  "created_at": "2013-04-25T09:00:50Z",
  "category_id": 82218,
  "folder_id": 134765,
  "title": "Welcome Call IVR application",
  "updated_at": "2014-12-22T10:30:44Z",
  "description": "<h3><span style=\"font-size: 18px;\">Call routing setup</span></h3>\n<p><br></p>\n<div>\r\n<p>\r\nNo special routing setup required for the application to work. But \r\nspecial configuration may be created for the SER to prevent recording \r\nCDRs for the calls generated by the application. <strong><br></strong></p>\n<p><strong><br></strong></p>\n<p><strong>TODO: write simple ser.cfg example</strong>\r\n</p>\r\n<h3><br></h3>\n<h3><span style=\"font-size: 18px;\">Configuration options</span></h3>\n<p><br></p>\r\n<p>\r\n<i> <strong>WARNING! </strong> Both Section and Option values MUST be lowercase in the database. They are mixed case here for readability only.</i>\r\n</p>\r\n<table><tbody>\n<tr>\n<td> <strong>Section</strong> </td>\n<td> <strong>Option</strong> </td>\n<td> <strong>Meaning</strong> </td>\n<td> <strong>Default</strong> \r\n</td>\n</tr>\n<tr>\n<td> <strong>FirstRegistration</strong> </td>\n<td> <strong>ScanIntervalSec</strong> </td>\n<td> The time between the attempts to find accounts to make a Welcome Call to </td>\n<td> 30 seconds \r\n</td>\n</tr>\n<tr>\n<td> <strong>FirstRegistration</strong> </td>\n<td> <strong>BackoffIntervalSec</strong> </td>\n<td> Failed attempts to make welcome call will be retried after the interval increasing by this value </td>\n<td> 10 minutes \r\n</td>\n</tr>\n<tr>\n<td> <strong>FirstRegistration</strong> </td>\n<td> <strong>MaxCallIntervalSec</strong> </td>\n<td> The time between retries to make Welcome Call cannot exceed this value </td>\n<td> 14400 seconds (4 hours) \r\n</td>\n</tr>\n<tr>\n<td> <strong>FirstRegistration</strong> </td>\n<td> <strong>TimeoutMsec</strong> </td>\n<td> The amount of time the application will wait for answer </td>\n<td> 30000 milliseconds \r\n</td>\n</tr>\n<tr>\n<td> <strong>FirstRegistration</strong> </td>\n<td> <strong>ThresholdMsec</strong> </td>\n<td> The minimum amount of time that the user must keep listening to the message after which Welcome Call is considered successful* </td>\n<td> 3000 milliseconds \r\n</td>\n</tr>\n<tr>\n<td> <strong>FirstRegistration</strong> </td>\n<td> <strong>cli</strong> </td>\n<td> CLI to use while originating Welcome Calls** </td>\n<td> NULL (means Anonymous) \r\n</td>\n</tr>\n<tr>\n<td> <strong>FirstRegistration</strong> </td>\n<td> <strong>SIPProxy</strong> </td>\n<td> The <strong>host:port</strong> tuple defining the host where originated calls are to go </td>\n<td> 127.0.0.1:5060 \r\n</td>\n</tr>\n<tr>\n<td> <strong>FirstRegistration</strong> </td>\n<td> <strong>MaxAttempts</strong> </td>\n<td> The maximum number of failures to make welcome call. </td>\n<td> 20 \r\n</td>\n</tr>\n</tbody></table>\n<p><br></p>\n<p>* If the duration of the message is less than this value then a Welcome \r\nCall is considered successful after the whole prompt has been playe.\r\n</p>\r\n<p>\r\n** If the CLI is not NULL then the application finds the account \r\ncorresponding to CLI and uses it's authentication information to \r\noriginate a call.\r\n</p>\r\n<h3><br></h3>\n<h3><span style=\"font-size: 18px;\">Database usage</span></h3>\n<p><br></p>\r\n<p>\r\nThe application uses IVR Prompts facility for the Welcome Call message storage.\r\n</p>\r\n<h3><br></h3>\n<h3><span style=\"font-size: 18px;\">Setting a custom prompt</span></h3>\n<p><br></p>\r\n<p>\r\nIt is possible to play a custom greeting to the user from the Welcome \r\nCall application. The first step is to create an IVR prompt: <br></p>\n<p><br></p>\n<table id=\"table3066\"><tbody><tr><td class=\"current\"><pre>$ /home/ssp/scripts/ivr_prompt_utils -c welcome.sln welcome_prompt 'This is a Welcome Call prompt'\r\nNew prompt created with i_ivr_prompt = 30</pre></td></tr></tbody></table>\n<br><p>\r\nThe prompt is ready. Now assign this prompt to the accounts:\u00a0</p>\n<p><br></p>\n<table id=\"table52093\"><tbody><tr><td class=\"current\"><pre>UPDATE accounts SET welcome_call_ivr = 30 WHERE ...</pre></td></tr></tbody></table>\n<p><br></p>\r\n\r\n        \r\n        \r\n      </div>",
  "description_text": " Call routing setup \n   \n \n \nNo special routing setup required for the application to work. But \nspecial configuration may be created for the SER to prevent recording \nCDRs for the calls generated by the application.   \n   \n TODO: write simple ser.cfg example\n \n   \n Configuration options \n   \n \n WARNING!  Both Section and Option values MUST be lowercase in the database. They are mixed case here for readability only.\n \n\n\n  Section  \n  Option  \n  Meaning  \n  Default \n \n\n\n  FirstRegistration  \n  ScanIntervalSec  \n  The time between the attempts to find accounts to make a Welcome Call to  \n  30 seconds \n \n\n\n  FirstRegistration  \n  BackoffIntervalSec  \n  Failed attempts to make welcome call will be retried after the interval increasing by this value  \n  10 minutes \n \n\n\n  FirstRegistration  \n  MaxCallIntervalSec  \n  The time between retries to make Welcome Call cannot exceed this value  \n  14400 seconds (4 hours) \n \n\n\n  FirstRegistration  \n  TimeoutMsec  \n  The amount of time the application will wait for answer  \n  30000 milliseconds \n \n\n\n  FirstRegistration  \n  ThresholdMsec  \n  The minimum amount of time that the user must keep listening to the message after which Welcome Call is considered successful*  \n  3000 milliseconds \n \n\n\n  FirstRegistration  \n  cli  \n  CLI to use while originating Welcome Calls**  \n  NULL (means Anonymous) \n \n\n\n  FirstRegistration  \n  SIPProxy  \n  The host:port tuple defining the host where originated calls are to go  \n  127.0.0.1:5060 \n \n\n\n  FirstRegistration  \n  MaxAttempts  \n  The maximum number of failures to make welcome call.  \n  20 \n \n\n\n   \n * If the duration of the message is less than this value then a Welcome \nCall is considered successful after the whole prompt has been playe.\n \n \n** If the CLI is not NULL then the application finds the account \ncorresponding to CLI and uses it's authentication information to \noriginate a call.\n \n   \n Database usage \n   \n \nThe application uses IVR Prompts facility for the Welcome Call message storage.\n \n   \n Setting a custom prompt \n   \n \nIt is possible to play a custom greeting to the user from the Welcome \nCall application. The first step is to create an IVR prompt:   \n   \n  $ /home/ssp/scripts/ivr_prompt_utils -c welcome.sln welcome_prompt 'This is a Welcome Call prompt'\nNew prompt created with i_ivr_prompt = 30  \n  \nThe prompt is ready. Now assign this prompt to the accounts:\u00a0 \n   \n  UPDATE accounts SET welcome_call_ivr = 30 WHERE ...  \n   \n\n        \n        \n       ",
  "seo_data": {
    "meta_title": "",
    "meta_description": "",
    "meta_keywords": ""
  },
  "tags": [],
  "attachments": [],
  "cloud_files": [],
  "thumbs_up": 1,
  "thumbs_down": 0,
  "hits": 635,
  "suggested": 0,
  "feedback_count": 0,
  "collaboration": {
    "convo_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJUeXBlIjoiYXJ0aWNsZSIsIkNvbnZvSWQiOiI3OTA0OS1lbiIsIlVzZXJJZCI6IjMwMTIwODk1MjQiLCJleHAiOjE2MzUzNzExMjV9.P15gTo3XG-GReHVyWY9gJO9iTParku7DCb6f40sxUnY"
  }
}