{
  "id": 3000062198,
  "type": 1,
  "status": 2,
  "agent_id": 3763909,
  "created_at": "2017-02-01T03:31:22Z",
  "category_id": 81138,
  "folder_id": 133168,
  "title": "Timeouts affecting calls in Sippy",
  "updated_at": "2020-02-20T13:41:51Z",
  "description": "<p>The Sippy Softswitch has multiple layers of timeouts that are configurable to control the flow and quality of your calls. Timeouts provide multiple benefits to you as a Sippy operator, including quality assurance, the provision of an added layer of logic for routing optimization, and call redirection accommodating user preferences.</p><p><br></p><p>Timeouts are imposed on outbound/upstream traffic to ensure the quality of your connections is delivered. Route forwarding occurs within your routing table to attempt to terminate the call through successive Routing Entries in the event that a gateway (Vendor &gt; Connection) cannot be reached for any number of reasons. Adjusting multiple timeouts is possible with Sippy to empower you to configure routing preferences that are better suited to your network characteristics.</p><p><br></p><p>Inbound traffic timeouts depict the call flow of the call through your customer's preferred termination points and the total time that the originating caller waits. Inbound timeouts empower the control over Call Forwarding attempts to multiple selections, Voicemail, and a total time for all termination attempts.</p><h3><br></h3><h2>Outbound/Upstream traffic timeouts and their order</h2><p><br></p><p>Outbound traffic is the calls that have originated at your customer's UA or IP that are sent to your Sippy Softswitch for terminating through your destinations. Calls are Authenticated to an Account, billed by the Tariff associated to the Account's Balance, and routed according to the Routing Entries that are configured in your Routing Group. The calls are passed to your Vendor/Supplier for termination.</p><ol><li><strong><span style=\"color: rgb(184, 49, 47);\">Reply Timeout, Sec</span></strong> - Configured on Vendor &gt; Connection, the time that Sippy will wait for the 100 reply search. Also known as 100 timeout. The default value is 5 seconds, which is configurable in your Vendor &gt; Connection - Reply Timeout, Sec.</li><li><strong><span style=\"color: rgb(184, 49, 47);\">1xx Timeout, sec</span></strong> - The time that Sippy waits for any session progress response from the Vendor &gt; Connection. The default 1xx Timeout is <strong>10 seconds</strong>, which is configurable in your Destination Set &gt; Route - the specific route for your prefix.</li><li><strong><span style=\"color: rgb(184, 49, 47);\">2xx Timeout, sec</span></strong> - The time that Sippy waits for the call to be answered resulting in a 2xx\u2014Successful Response and the call to begin. The default 2xx Timeout is <strong>60 seconds</strong>, which is configurable in your Destination Set &gt; Route - the specific route for your prefix.</li><li><strong><span style=\"color: rgb(184, 49, 47);\">Final 2xx Timeout, sec</span></strong> -<span data-identifyelement=\"190\" data-test-id=\"article-description\">\u00a0this parameter allows setting the 2xx timeout for the last routing entry in the Routing Entries/Follow Me Entry, by default it's set to 300 seconds, meaning that Sippy will be waiting for 200OK message on the INVITE up to this <strong>Final 2xx Timeout</strong>. The timeout is applied to the last routing entry in the routing group/last Follow Me Entry only. Since 4.5 version of Sippy on Routing Group preferences the new item has been added:</span></li></ol><p><strong><span style=\"color: rgb(184, 49, 47);\"><img src=\"https://s3.amazonaws.com/cdn.freshdesk.com/data/helpdesk/attachments/production/3051300254/original/orpHFG918bLjsqV2GEcBZNs6QfXbpM5Plw.png?1582205998\" style=\"width: 411px;\" class=\"fr-fic fr-dib\" data-attachment=\"[object Object]\" data-id=\"3051300254\"></span></strong><br><br><em>Note: All three timers (1xx, 2xx, and Final 2xx) are fired just after sending the INVITE to the vendor. E.g. with 2xx timeout = 10 seconds, case the vendor/connection is not able to connect the call (send 200OK message to us) within 10 seconds, we're dropping that vendor/connection from the call flow, and either try another vendor or drop the call. This is applied even if the vendor replied with the first 1xx message at the 9th second of the call.</em></p><p><span data-test-desctext=\"\" data-test-selectablecontent=\"\">\u00a0 \u00a0 \u00a0 \u00a0\u00a0</span></p><p><span data-test-desctext=\"\" data-test-selectablecontent=\"\">\u00a0 \u00a0 \u00a0 \u00a0 <u>Let's consider that timeouts are set as below:\u00a0</u><br> Vendor/connection --&gt;<strong>\u00a0Reply timeout (100 Trying timeout)</strong> = 5 sec\u00a0</span></p><p><span data-test-desctext=\"\" data-test-selectablecontent=\"\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Destination set --&gt; Route --&gt;<strong>\u00a01xx timeout</strong> = 10 sec\u00a0</span></p><p><span data-test-desctext=\"\" data-test-selectablecontent=\"\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Destination set --&gt; Route --&gt;<strong>\u00a02xx timeout</strong> = 2 sec\u00a0</span></p><p><span data-test-desctext=\"\" data-test-selectablecontent=\"\"><br> Next step, a user makes a call and <strong>100 Trying</strong> is delayed for 4 sec.\u00a0</span></p><p><span data-test-desctext=\"\" data-test-selectablecontent=\"\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0As a result, the call is dropped in 2 sec due to <strong>2xx timeout</strong> because all timeouts are fired simultaneously. In our case, the first timeout is <strong>2xx</strong> which runs out in 2 sec and it doesn't matter that the system should wait for 100 Trying within 4 sec.</span>\u00a0</p><p><br></p><p><em><strong><span style=\"color: rgb(184, 49, 47);\">\u00a0 \u00a0 \u00a0 \u00a0</span></strong></em><span style=\"color: rgb(184, 49, 47);\">\u00a0</span><span style=\"color: rgb(0, 0, 0);\">5.</span><em><strong><span style=\"color: rgb(184, 49, 47);\">\u00a0Max Session Time</span></strong> - The total duration of a call that is allowed once setup has been completed and the call has begun. This parameter is configured on each Account under Advanced Parameters. The Max Session Time affects inbound, outbound,</em><em>\u00a0and On-Net calls alike.\u00a0</em><em>More information can be found at the linked documents at the foot of this page.</em></p><p><br></p><h2>Inbound traffic timeouts and their order</h2><ol><li><strong><span style=\"color: rgb(184, 49, 47);\">Follow Me timeout</span></strong> - The \"Follow Me\" feature empowers each Account within Sippy to forward calls to another specified CLD after a trying attempt has been made for a configurable timeframe.</li><li><strong><span style=\"color: rgb(184, 49, 47);\">VM Timeout, secs</span></strong> - The Voicemail timeout determines the point in time at which the call is directed to an Account's configured Voicemail.<br><em>NOTE: \"VM Enabled\" checkbox is selected by default on Account creation (4.5) with a \"VM Timeout, secs\" of 30 as a default timeout enabled.</em></li><li><strong><span style=\"color: rgb(184, 49, 47);\">Max Session Time</span></strong> - The total duration of a call that is allowed once setup has been completed and the call has begun. This parameter is configured on each Account under Advanced Parameters. The Max Session Time affects inbound, outbound, and Onnet calls alike and has a default value of 3600 seconds.</li><li><strong><span style=\"color: rgb(184, 49, 47);\"><strong><span style=\"color: rgb(184, 49, 47);\">Final 2xx Timeout, sec</span></strong> -</span></strong><span style=\"color: rgb(0, 0, 0);\"><span data-identifyelement=\"190\" data-test-id=\"article-description\">\u00a0this parameter allows setting the 2xx timeout for the last routing entry in the Routing Entries/Follow Me Entry, by default it's set to 300 seconds, meaning that Sippy will be waiting for 200OK message on the INVITE up to this Final 2xx Timeout. The timeout is applied to the last routing entry in the routing group/last Follow Me Entry only.</span></span></li></ol><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><em>Note: More information can be found at the linked documents at the foot of this page.</em></p><p><br></p><p><br></p><h2>On-Net calls timeout</h2><ul><li><strong><span style=\"color: rgb(184, 49, 47);\">On-Net timeout</span>\u00a0</strong>- The hardcoded Sippy timeout for Onnet calls is 15 seconds (for 5.0 see below). This affects calls that are made from Account to Account in the Sippy Softswitch with the Timeout initiated when <em>an action is not taken by the receiving Account</em>.</li></ul><p><br></p><p>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 From 5.0 Sippy introduced 3 additional <strong><span style=\"color: rgb(184, 49, 47);\">on-net timeouts</span></strong> (that were hard-coded till 5.0) that are configurable for each routing group, namely a:</p><pre contenteditable=\"false\" data-code-brush=\"html\" rel=\"highlighter\">onnet_timeout_100 \u00a0(default value 5 sec)\nonnet_timeout_1xx \u00a0(default value 10 sec)\nonnet_timeout_2xx \u00a0(default value 60 sec)</pre><p>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0On the current stage, they can be tuned only by Sippy support team via database directly. The default values can be also changed for the system on a permanent basis.</p><p><br></p><h2>Hardcoded RFC timeouts</h2><ul><li>A timeout of <strong>32 seconds</strong> is a hard-coded as a default timer compliant to RFC 3261 relating to incomplete transactions or unreliable transports: <a href=\"https://tools.ietf.org/html/rfc3261#page-114\" rel=\"noreferrer\" target=\"_blank\" title=\"\">https://tools.ietf.org/html/rfc3261#page-114</a></li><li>A hardcoded timeout of <strong>300 seconds</strong> is employed in the scenario that there is no 200 OK from the last routing entry gateway within 300 seconds. The call is dropped on 487 Request Expired from the Sippy Softswitch.</li></ul><p><br></p><p><br></p><h2>RTP Timeout</h2><p><br></p><p>The default value for Sippy's built-in RTP timer is <strong>60 seconds</strong>. There are several features regarding the RTP timeout:</p><ul><li>It works only in the scenario that media traffic is passing via the server, through Sippy's built-in RTPproxy media proxy.</li><li>RTP packets are sent by Sippy without a response from the callee's side.</li><li>The duration of the call will be adjusted for 60 seconds (RTP timer value) once the RTP timer is activated.</li></ul><p><br></p><h2>Troubleshooting and Identifying calls that are affected by timeouts</h2><p><br></p><p>Most often, a call that has been ended as a result of a timeout will be interrupted by Sippy with a CANCEL SIP message. By capturing a specific Call ID of an affected call and running a SIP Log Viewer within Sippy's Tools, the SIP Log will display a CANCEL after the specified length of time, as can be seen in the following image. The CANCEL was sent by the originating switch, in this case, identifying a timeout of 15 seconds which is an Onnet call timeout.</p><p><br></p><p style=\"text-align: center;\"><img class=\"fr-dib\" src=\"https://s3.amazonaws.com/cdn.freshdesk.com/data/helpdesk/attachments/production/3026062105/original/UamYkHAs2G8mb1KI6CUmukI9LwbReC0z8g.png?1486101310\" data-filelink=\"https://s3.amazonaws.com/cdn.freshdesk.com/data/helpdesk/attachments/production/3026062105/original/UamYkHAs2G8mb1KI6CUmukI9LwbReC0z8g.png?1486101310\" data-fileid=\"3026062105\" data-uniquekey=\"1486100911846\"></p><p><br></p><p><br></p><p><strong>More documentation/information:</strong></p><ul><li><a href=\"http://support.sippysoft.com/solution/articles/145637-call-forwarding-follow-me-\">Call Forwarding / Follow Me</a></li><li><a href=\"http://support.sippysoft.com/solution/articles/77556-understanding-routing\">Understanding Routing</a></li></ul><p><br></p><p><strong>API application manipulation documentation:</strong></p><ul><li><a href=\"http://support.sippysoft.com/solution/articles/107435-connections-management\">XML-RPC API - Connections Management</a> - manipulation of 100 Reply Timeout.</li><li><a href=\"http://support.sippysoft.com/solution/articles/107473-destination-sets-management\">XML-RPC API - Destination Sets Management</a> - manipulation of 1xx and 2xx Timeouts.</li><li><a href=\"http://support.sippysoft.com/solution/categories/107132/folders/176717/articles/107312-account-creation-and-parameters\">XML-RPC API - Account Creation and Parameters</a> and <a href=\"http://support.sippysoft.com/solution/articles/107320-xml-rpc-api-updating-accounts\">XML-RPC API Updating Accounts</a> - VM enable and VM Timeout manipulation.</li><li><a data-pjax=\"#body-container\" href=\"http://support.sippysoft.com/solution/articles/107412-xml-rpc-api-follow-me-feature-management\">XML-RPC API - \"Follow Me\" Feature Management</a> - manipulation of call forwarding timeouts.</li></ul>",
  "description_text": " The Sippy Softswitch has multiple layers of timeouts that are configurable to control the flow and quality of your calls. Timeouts provide multiple benefits to you as a Sippy operator, including quality assurance, the provision of an added layer of logic for routing optimization, and call redirection accommodating user preferences.     Timeouts are imposed on outbound/upstream traffic to ensure the quality of your connections is delivered. Route forwarding occurs within your routing table to attempt to terminate the call through successive Routing Entries in the event that a gateway (Vendor > Connection) cannot be reached for any number of reasons. Adjusting multiple timeouts is possible with Sippy to empower you to configure routing preferences that are better suited to your network characteristics.     Inbound traffic timeouts depict the call flow of the call through your customer's preferred termination points and the total time that the originating caller waits. Inbound timeouts empower the control over Call Forwarding attempts to multiple selections, Voicemail, and a total time for all termination attempts.     Outbound/Upstream traffic timeouts and their order     Outbound traffic is the calls that have originated at your customer's UA or IP that are sent to your Sippy Softswitch for terminating through your destinations. Calls are Authenticated to an Account, billed by the Tariff associated to the Account's Balance, and routed according to the Routing Entries that are configured in your Routing Group. The calls are passed to your Vendor/Supplier for termination.   Reply Timeout, Sec - Configured on Vendor > Connection, the time that Sippy will wait for the 100 reply search. Also known as 100 timeout. The default value is 5 seconds, which is configurable in your Vendor > Connection - Reply Timeout, Sec.  1xx Timeout, sec - The time that Sippy waits for any session progress response from the Vendor > Connection. The default 1xx Timeout is 10 seconds, which is configurable in your Destination Set > Route - the specific route for your prefix.  2xx Timeout, sec - The time that Sippy waits for the call to be answered resulting in a 2xx\u2014Successful Response and the call to begin. The default 2xx Timeout is 60 seconds, which is configurable in your Destination Set > Route - the specific route for your prefix.  Final 2xx Timeout, sec -\u00a0this parameter allows setting the 2xx timeout for the last routing entry in the Routing Entries/Follow Me Entry, by default it's set to 300 seconds, meaning that Sippy will be waiting for 200OK message on the INVITE up to this Final 2xx Timeout. The timeout is applied to the last routing entry in the routing group/last Follow Me Entry only. Since 4.5 version of Sippy on Routing Group preferences the new item has been added:     Note: All three timers (1xx, 2xx, and Final 2xx) are fired just after sending the INVITE to the vendor. E.g. with 2xx timeout = 10 seconds, case the vendor/connection is not able to connect the call (send 200OK message to us) within 10 seconds, we're dropping that vendor/connection from the call flow, and either try another vendor or drop the call. This is applied even if the vendor replied with the first 1xx message at the 9th second of the call.  \u00a0 \u00a0 \u00a0 \u00a0\u00a0  \u00a0 \u00a0 \u00a0 \u00a0 Let's consider that timeouts are set as below:\u00a0  Vendor/connection -->\u00a0Reply timeout (100 Trying timeout) = 5 sec\u00a0  \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Destination set --> Route -->\u00a01xx timeout = 10 sec\u00a0  \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Destination set --> Route -->\u00a02xx timeout = 2 sec\u00a0    Next step, a user makes a call and 100 Trying is delayed for 4 sec.\u00a0  \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0As a result, the call is dropped in 2 sec due to 2xx timeout because all timeouts are fired simultaneously. In our case, the first timeout is 2xx which runs out in 2 sec and it doesn't matter that the system should wait for 100 Trying within 4 sec.\u00a0     \u00a0 \u00a0 \u00a0 \u00a0\u00a05.\u00a0Max Session Time - The total duration of a call that is allowed once setup has been completed and the call has begun. This parameter is configured on each Account under Advanced Parameters. The Max Session Time affects inbound, outbound,\u00a0and On-Net calls alike.\u00a0More information can be found at the linked documents at the foot of this page.     Inbound traffic timeouts and their order   Follow Me timeout - The \"Follow Me\" feature empowers each Account within Sippy to forward calls to another specified CLD after a trying attempt has been made for a configurable timeframe.  VM Timeout, secs - The Voicemail timeout determines the point in time at which the call is directed to an Account's configured Voicemail. NOTE: \"VM Enabled\" checkbox is selected by default on Account creation (4.5) with a \"VM Timeout, secs\" of 30 as a default timeout enabled.  Max Session Time - The total duration of a call that is allowed once setup has been completed and the call has begun. This parameter is configured on each Account under Advanced Parameters. The Max Session Time affects inbound, outbound, and Onnet calls alike and has a default value of 3600 seconds.  Final 2xx Timeout, sec -\u00a0this parameter allows setting the 2xx timeout for the last routing entry in the Routing Entries/Follow Me Entry, by default it's set to 300 seconds, meaning that Sippy will be waiting for 200OK message on the INVITE up to this Final 2xx Timeout. The timeout is applied to the last routing entry in the routing group/last Follow Me Entry only.      Note: More information can be found at the linked documents at the foot of this page.        On-Net calls timeout   On-Net timeout\u00a0- The hardcoded Sippy timeout for Onnet calls is 15 seconds (for 5.0 see below). This affects calls that are made from Account to Account in the Sippy Softswitch with the Timeout initiated when an action is not taken by the receiving Account.      \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 From 5.0 Sippy introduced 3 additional on-net timeouts (that were hard-coded till 5.0) that are configurable for each routing group, namely a:  onnet_timeout_100 \u00a0(default value 5 sec)\nonnet_timeout_1xx \u00a0(default value 10 sec)\nonnet_timeout_2xx \u00a0(default value 60 sec)  \u00a0 \u00a0 \u00a0 \u00a0 \u00a0On the current stage, they can be tuned only by Sippy support team via database directly. The default values can be also changed for the system on a permanent basis.     Hardcoded RFC timeouts   A timeout of 32 seconds is a hard-coded as a default timer compliant to RFC 3261 relating to incomplete transactions or unreliable transports: https://tools.ietf.org/html/rfc3261#page-114  A hardcoded timeout of 300 seconds is employed in the scenario that there is no 200 OK from the last routing entry gateway within 300 seconds. The call is dropped on 487 Request Expired from the Sippy Softswitch.         RTP Timeout     The default value for Sippy's built-in RTP timer is 60 seconds. There are several features regarding the RTP timeout:   It works only in the scenario that media traffic is passing via the server, through Sippy's built-in RTPproxy media proxy.  RTP packets are sent by Sippy without a response from the callee's side.  The duration of the call will be adjusted for 60 seconds (RTP timer value) once the RTP timer is activated.      Troubleshooting and Identifying calls that are affected by timeouts     Most often, a call that has been ended as a result of a timeout will be interrupted by Sippy with a CANCEL SIP message. By capturing a specific Call ID of an affected call and running a SIP Log Viewer within Sippy's Tools, the SIP Log will display a CANCEL after the specified length of time, as can be seen in the following image. The CANCEL was sent by the originating switch, in this case, identifying a timeout of 15 seconds which is an Onnet call timeout.             More documentation/information:   Call Forwarding / Follow Me  Understanding Routing      API application manipulation documentation:   XML-RPC API - Connections Management - manipulation of 100 Reply Timeout.  XML-RPC API - Destination Sets Management - manipulation of 1xx and 2xx Timeouts.  XML-RPC API - Account Creation and Parameters and XML-RPC API Updating Accounts - VM enable and VM Timeout manipulation.  XML-RPC API - \"Follow Me\" Feature Management - manipulation of call forwarding timeouts.  ",
  "seo_data": {
    "meta_title": "",
    "meta_description": "",
    "meta_keywords": ""
  },
  "tags": [
    "Routing"
  ],
  "attachments": [],
  "cloud_files": [],
  "thumbs_up": 0,
  "thumbs_down": 0,
  "hits": 1616,
  "suggested": 0,
  "feedback_count": 0,
  "collaboration": {
    "convo_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJUeXBlIjoiYXJ0aWNsZSIsIkNvbnZvSWQiOiIzMDAwMDYyMTk4LWVuIiwiVXNlcklkIjoiMzAxMjA4OTUyNCIsImV4cCI6MTYzNTM3MTAyNn0.jxNskZKHCkZ2heBrBtcybx4_JGmzMCGwX2yqZ8n1dSU"
  }
}